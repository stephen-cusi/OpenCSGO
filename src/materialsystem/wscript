#! /usr/bin/env python

def options(opt):
	return

def configure(conf):
	conf.define('DEFINE_MATERIALSYSTEM_INTERFACE', True)
	conf.define('MATERIALSYSTEM_EXPORTS', True)

def build(bld):
	libs = ['tier0', 'bitmap', 'tier1', 'tier2', 'tier3', 'interfaces', 'vstdlib', 'mathlib', 'togl', 'shaderlib', 'vtf', 'videocfg']

	includes = []

	source = [
		'CColorCorrection.cpp',
		'cmaterial.cpp',
		'cmaterial_queuefriendly.cpp',
		'CMaterialSubRect.cpp',
		'cmaterialvar.cpp',
		'cmatnullrendercontext.cpp',
		'colorspace.cpp',
		'ctexture.cpp',
		'../public/filesystem_helpers.cpp',
		'imagepacker.cpp',
		'mat_stub.cpp',
		'materialsystem_global.cpp',
		'morph.cpp',
		'SubdMgr.cpp',
		'occlusionquerymgr.cpp',
		'shadersystem.cpp',
		'texturemanager.cpp',
		'composite_texture.cpp',
		'custom_material.cpp',
		'base_visuals_data_processor.cpp',
		'pch_materialsystem.cpp',
		'cmaterialdict.cpp',
		'cmaterialsystem.cpp',
		'cmatlightmaps.cpp',
		'cmatpaintmaps.cpp',
		'cmatrendercontext.cpp',
		'cmatqueuedrendercontext.cpp',
		'../public/tier0/memoverride.cpp'
	]

	bld.shlib(
		source   = source,
		target   = 'materialsystem',
		features = 'cxx',
		includes = includes,
		use      = libs,
		install_path = bld.env.BINPATH,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx = bld.get_taskgen_count()
	)
