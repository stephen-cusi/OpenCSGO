#! /usr/bin/env python

def options(opt):
	return

def configure(conf):
	return

def build(bld):
	libs = []

	includes = ['../public/mathlib']

	source_mathlib = [
		'expressioncalculator.cpp',
		'color_conversion.cpp',
		'cholesky.cpp',
		'halton.cpp',
		'lightdesc.cpp',
		'mathlib_base.cpp',
		'powsse.cpp',
		'sparse_convolution_noise.cpp',
		'sseconst.cpp',
		'sse.cpp',
		'ssenoise.cpp',
		'anorms.cpp',
		'bumpvects.cpp',
		'IceKey.cpp',
		'kdop.cpp',
		'imagequant.cpp',
		'spherical.cpp',
		'polyhedron.cpp',
		'quantize.cpp',
		'randsse.cpp',
		'simdvectormatrix.cpp',
		'vmatrix.cpp',
		'almostequal.cpp',
		'simplex.cpp',
		'eigen.cpp',
		'box_buoyancy.cpp',
		'camera.cpp',
		'planefit.cpp',
		'polygon.cpp',
		'volumeculler.cpp',
		'transform.cpp',
		'sphere.cpp',
		'capsule.cpp'
	]

	source_mathlib_extended = [
		'disjoint_set_forest.cpp',
		'dynamictree.cpp',
		'eigen.cpp',
		'simdvectormatrix.cpp',
		'femodel.cpp',
		'femodelbuilder.cpp',
		'feagglomerator.cpp',
		'svd.cpp',
		'transform.cpp',
		'femodeldesc.cpp',
		'softbody.cpp',
		'softbodyenvironment.cpp'
	]

	bld.stlib(
		source   = source_mathlib,
		target   = 'mathlib',
		features = 'cxx',
		includes = includes,
		use      = libs,
		subsystem = bld.env.msvc_subsystem,
		idx = bld.get_taskgen_count()
	)

	bld.stlib(
		source   = source_mathlib_extended,
		target   = 'mathlib_extended',
		features = 'cxx',
		includes = includes,
		use      = libs,
		subsystem = bld.env.msvc_subsystem,
		idx = bld.get_taskgen_count()
	)
