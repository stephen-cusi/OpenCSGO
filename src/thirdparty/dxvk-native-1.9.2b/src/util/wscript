#! /usr/bin/env python

def options(opt):
	return

def configure(conf):
	conf.define('DXVK_NATIVE', True)
	conf.define('DXVK_WSI_SDL2', True)
	conf.define('DXVK_PLATFORM_LINUX', True)

def build(bld):
	if bld.env.DEST_OS == 'win32':
		return

	libs = []

	includes = [
		'.',
		'../../include'
	]

	source = [
		'util_env.cpp',
		'util_fps_limiter.cpp',
		'util_matrix.cpp',
		'util_monitor.cpp',
		'com/com_guid.cpp',
		'com/com_private_data.cpp',
		'config/config.cpp',
		'log/log.cpp',
		'log/log_debug.cpp',
		'sha1/sha1.c',
		'sha1/sha1_util.cpp',
		'sync/sync_recursive.cpp',
		'platform/util_luid_linux.cpp',
		'platform/util_env_linux.cpp',
		'platform/util_string_linux.cpp',
		'platform/thread_native.cpp'
	]

	bld.stlib(
		source   = source,
		target   = 'dxvk_util',
		features = 'cxx',
		includes = includes,
		use      = libs,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx = bld.get_taskgen_count()
	)
