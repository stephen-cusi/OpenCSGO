#! /usr/bin/env python

def options(opt):
	return

def configure(conf):
	conf.define('DXVK_NATIVE', True)
	conf.define('DXVK_WSI_SDL2', True)
	conf.define('DXVK_PLATFORM_LINUX', True)

def build(bld):
	if bld.env.DEST_OS == 'win32':
		return

	libs = []

	includes = [
		'.',
		'../../include'
	]

	source = [
		'dxvk_adapter.cpp',
		'dxvk_barrier.cpp',
		'dxvk_buffer.cpp',
		'dxvk_cmdlist.cpp',
		'dxvk_compute.cpp',
		'dxvk_context.cpp',
		'dxvk_cs.cpp',
		'dxvk_data.cpp',
		'dxvk_descriptor.cpp',
		'dxvk_device.cpp',
		'dxvk_device_filter.cpp',
		'dxvk_extensions.cpp',
		'dxvk_format.cpp',
		'dxvk_framebuffer.cpp',
		'dxvk_gpu_event.cpp',
		'dxvk_gpu_query.cpp',
		'dxvk_graphics.cpp',
		'dxvk_image.cpp',
		'dxvk_instance.cpp',
		'dxvk_lifetime.cpp',
		'dxvk_main.cpp',
		'dxvk_memory.cpp',
		'dxvk_meta_blit.cpp',
		'dxvk_meta_clear.cpp',
		'dxvk_meta_copy.cpp',
		'dxvk_meta_mipgen.cpp',
		'dxvk_meta_pack.cpp',
		'dxvk_meta_resolve.cpp',
		'dxvk_options.cpp',
		'dxvk_pipecache.cpp',
		'dxvk_pipelayout.cpp',
		'dxvk_pipemanager.cpp',
		'dxvk_queue.cpp',
		'dxvk_renderpass.cpp',
		'dxvk_resource.cpp',
		'dxvk_sampler.cpp',
		'dxvk_shader.cpp',
		'dxvk_shader_key.cpp',
		'dxvk_signal.cpp',
		'dxvk_spec_const.cpp',
		'dxvk_staging.cpp',
		'dxvk_state_cache.cpp',
		'dxvk_stats.cpp',
		'dxvk_swapchain_blitter.cpp',
		'dxvk_unbound.cpp',
		'dxvk_util.cpp',
		'hud/dxvk_hud.cpp',
		'hud/dxvk_hud_font.cpp',
		'hud/dxvk_hud_item.cpp',
		'hud/dxvk_hud_renderer.cpp',
		'platform/dxvk_sdl2_exts.cpp'
	]

	bld.stlib(
		source   = source,
		target   = 'dxvk',
		features = 'cxx',
		includes = includes,
		use      = libs,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx = bld.get_taskgen_count()
	)
