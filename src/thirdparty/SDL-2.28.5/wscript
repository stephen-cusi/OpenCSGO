#! /usr/bin/env python

def options(opt):
	return

def configure(conf):
	conf.define('GL_GLEXT_PROTOTYPES', True)

def build(bld):
	if bld.env.DEST_OS != 'android':
		return

	libs = ['android', 'android_log', 'OpenSLES', 'GLESv2']

	includes = []

	source = bld.path.ant_glob([
		'src/*.c',
		'src/audio/*.c',
		'src/audio/android/*.c',
		'src/audio/dummy/*.c',
		'src/audio/aaudio/*.c',
		'src/audio/openslES/*.c',
		'src/atomic/*.c',
		'src/core/android/*.c',
		'src/cpuinfo/*.c',
		'src/dynapi/*.c',
		'src/events/*.c',
		'src/file/*.c',
		'src/haptic/*.c',
		'src/haptic/android/*.c',
		'src/hidapi/*.c',
		'src/hidapi/android/*.cpp',
		'src/joystick/*.c',
		'src/joystick/android/*.c',
		'src/joystick/hidapi/*.c',
		'src/joystick/virtual/*.c',
		'src/loadso/dlopen/*.c',
		'src/locale/*.c',
		'src/locale/android/*.c',
		'src/misc/*.c',
		'src/misc/android/*.c',
		'src/power/*.c',
		'src/power/android/*.c',
		'src/filesystem/android/*.c',
		'src/sensor/*.c',
		'src/sensor/android/*.c',
		'src/render/*.c',
		'src/render/*/*.c',
		'src/stdlib/*.c',
		'src/thread/*.c',
		'src/thread/pthread/*.c',
		'src/timer/*.c',
		'src/timer/unix/*.c',
		'src/video/*.c',
		'src/video/android/*.c',
		'src/video/yuv2rgb/*.c',
		'src/test/*.c'
	])

	bld.shlib(
		source   = source,
		target   = 'SDL2',
		features = 'cxx',
		includes = includes,
		use      = libs,
		install_path = bld.env.BINPATH,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx = bld.get_taskgen_count()
	)
